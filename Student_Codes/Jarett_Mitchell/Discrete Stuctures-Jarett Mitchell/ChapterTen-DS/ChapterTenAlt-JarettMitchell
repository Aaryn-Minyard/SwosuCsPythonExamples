import pandas as pd
import numpy as np
from geopy.distance import distance

# Load the data
data = pd.read_csv('C:\\Users\\pixel\\git\\SwosuCsPythonExamples\\Student_Codes\\Jarett_Mitchell\\Discrete Stuctures-Jarett Mitchell\\ChapterTen-DS\\us-state-capitals.csv')

# Calculate the pairwise distances
distances = np.zeros((50, 50))
for i in range(50):
    for j in range(i+1, 50):
        distances[i][j] = distances[j][i] = distance(
            (data['latitude'][i], data['longitude'][i]), 
            (data['latitude'][j], data['longitude'][j])
        ).miles

# Define the nearest neighbor algorithm
def nearest_neighbor(distances, start):
    n = distances.shape[0]
    visited = [start]
    total_distance = 0
    current_city = start
    for i in range(n-1):
        nearest_city = np.argmin([distances[current_city][j] for j in range(n) if j not in visited])
        nearest_distance = distances[current_city][nearest_city]
        total_distance += nearest_distance
        visited.append(nearest_city)
        current_city = nearest_city
    total_distance += distances[current_city][start]
    visited.append(start)
    return visited, total_distance

# Find the shortest path
path, distance = nearest_neighbor(distances, 0)
print('Shortest path:', path)
print('Total distance (miles):', distance)

